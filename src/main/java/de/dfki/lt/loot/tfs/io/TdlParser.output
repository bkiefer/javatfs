Grammar

    0 $accept: typedefs $end

    1 typedefs: typedef typedefs
    2         | typedef

    3 typedef: ID ":=" nodes
    4        | ID ":<" types
    5        | ID ":+" nodes

    6 types: ID '&' types
    7      | ID

    8 nodes: node '&' nodes
    9      | node

   10 node: ID
   11     | '[' featvals ']'
   12     | '#' ID
   13     | '<' elements '>'
   14     | "<!" elements "!>"
   15     | '<' '>'
   16     | "<!" "!>"

   17 featvals: featval ',' featvals
   18         | featval

   19 featval: path nodes

   20 path: ID '.' path
   21     | ID

   22 elements: nodes ',' elements
   23         | nodes
   24         | "..."


Terminals, with rules where they appear

$end (0) 0
'#' (35) 12
'&' (38) 6 8
',' (44) 17 22
'.' (46) 20
'<' (60) 13 15
'>' (62) 13 15
'[' (91) 11
']' (93) 11
error (256)
ID (258) 3 4 5 6 7 10 12 20 21
":=" (259) 3
":<" (260) 4
":+" (261) 5
"<!" (262) 14 16
"!>" (263) 14 16
"..." (264) 24


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
typedefs (19)
    on left: 1 2, on right: 0 1
typedef (20)
    on left: 3 4 5, on right: 1 2
types (21)
    on left: 6 7, on right: 4 6
nodes (22)
    on left: 8 9, on right: 3 5 8 19 22 23
node (23)
    on left: 10 11 12 13 14 15 16, on right: 8 9
featvals (24)
    on left: 17 18, on right: 11 17
featval (25)
    on left: 19, on right: 17 18
path (26)
    on left: 20 21, on right: 19 20
elements (27)
    on left: 22 23 24, on right: 13 14 22


state 0

    0 $accept: . typedefs $end

    ID  shift, and go to state 1

    typedefs  go to state 2
    typedef   go to state 3


state 1

    3 typedef: ID . ":=" nodes
    4        | ID . ":<" types
    5        | ID . ":+" nodes

    ":="  shift, and go to state 4
    ":<"  shift, and go to state 5
    ":+"  shift, and go to state 6


state 2

    0 $accept: typedefs . $end

    $end  shift, and go to state 7


state 3

    1 typedefs: typedef . typedefs
    2         | typedef .

    ID  shift, and go to state 1

    $default  reduce using rule 2 (typedefs)

    typedefs  go to state 8
    typedef   go to state 3


state 4

    3 typedef: ID ":=" . nodes

    ID    shift, and go to state 9
    '['   shift, and go to state 10
    '#'   shift, and go to state 11
    '<'   shift, and go to state 12
    "<!"  shift, and go to state 13

    nodes  go to state 14
    node   go to state 15


state 5

    4 typedef: ID ":<" . types

    ID  shift, and go to state 16

    types  go to state 17


state 6

    5 typedef: ID ":+" . nodes

    ID    shift, and go to state 9
    '['   shift, and go to state 10
    '#'   shift, and go to state 11
    '<'   shift, and go to state 12
    "<!"  shift, and go to state 13

    nodes  go to state 18
    node   go to state 15


state 7

    0 $accept: typedefs $end .

    $default  accept


state 8

    1 typedefs: typedef typedefs .

    $default  reduce using rule 1 (typedefs)


state 9

   10 node: ID .

    $default  reduce using rule 10 (node)


state 10

   11 node: '[' . featvals ']'

    ID  shift, and go to state 19

    featvals  go to state 20
    featval   go to state 21
    path      go to state 22


state 11

   12 node: '#' . ID

    ID  shift, and go to state 23


state 12

   13 node: '<' . elements '>'
   15     | '<' . '>'

    ID     shift, and go to state 9
    '['    shift, and go to state 10
    '#'    shift, and go to state 11
    '<'    shift, and go to state 12
    '>'    shift, and go to state 24
    "<!"   shift, and go to state 13
    "..."  shift, and go to state 25

    nodes     go to state 26
    node      go to state 15
    elements  go to state 27


state 13

   14 node: "<!" . elements "!>"
   16     | "<!" . "!>"

    ID     shift, and go to state 9
    '['    shift, and go to state 10
    '#'    shift, and go to state 11
    '<'    shift, and go to state 12
    "<!"   shift, and go to state 13
    "!>"   shift, and go to state 28
    "..."  shift, and go to state 25

    nodes     go to state 26
    node      go to state 15
    elements  go to state 29


state 14

    3 typedef: ID ":=" nodes .

    $default  reduce using rule 3 (typedef)


state 15

    8 nodes: node . '&' nodes
    9      | node .

    '&'  shift, and go to state 30

    $default  reduce using rule 9 (nodes)


state 16

    6 types: ID . '&' types
    7      | ID .

    '&'  shift, and go to state 31

    $default  reduce using rule 7 (types)


state 17

    4 typedef: ID ":<" types .

    $default  reduce using rule 4 (typedef)


state 18

    5 typedef: ID ":+" nodes .

    $default  reduce using rule 5 (typedef)


state 19

   20 path: ID . '.' path
   21     | ID .

    '.'  shift, and go to state 32

    $default  reduce using rule 21 (path)


state 20

   11 node: '[' featvals . ']'

    ']'  shift, and go to state 33


state 21

   17 featvals: featval . ',' featvals
   18         | featval .

    ','  shift, and go to state 34

    $default  reduce using rule 18 (featvals)


state 22

   19 featval: path . nodes

    ID    shift, and go to state 9
    '['   shift, and go to state 10
    '#'   shift, and go to state 11
    '<'   shift, and go to state 12
    "<!"  shift, and go to state 13

    nodes  go to state 35
    node   go to state 15


state 23

   12 node: '#' ID .

    $default  reduce using rule 12 (node)


state 24

   15 node: '<' '>' .

    $default  reduce using rule 15 (node)


state 25

   24 elements: "..." .

    $default  reduce using rule 24 (elements)


state 26

   22 elements: nodes . ',' elements
   23         | nodes .

    ','  shift, and go to state 36

    $default  reduce using rule 23 (elements)


state 27

   13 node: '<' elements . '>'

    '>'  shift, and go to state 37


state 28

   16 node: "<!" "!>" .

    $default  reduce using rule 16 (node)


state 29

   14 node: "<!" elements . "!>"

    "!>"  shift, and go to state 38


state 30

    8 nodes: node '&' . nodes

    ID    shift, and go to state 9
    '['   shift, and go to state 10
    '#'   shift, and go to state 11
    '<'   shift, and go to state 12
    "<!"  shift, and go to state 13

    nodes  go to state 39
    node   go to state 15


state 31

    6 types: ID '&' . types

    ID  shift, and go to state 16

    types  go to state 40


state 32

   20 path: ID '.' . path

    ID  shift, and go to state 19

    path  go to state 41


state 33

   11 node: '[' featvals ']' .

    $default  reduce using rule 11 (node)


state 34

   17 featvals: featval ',' . featvals

    ID  shift, and go to state 19

    featvals  go to state 42
    featval   go to state 21
    path      go to state 22


state 35

   19 featval: path nodes .

    $default  reduce using rule 19 (featval)


state 36

   22 elements: nodes ',' . elements

    ID     shift, and go to state 9
    '['    shift, and go to state 10
    '#'    shift, and go to state 11
    '<'    shift, and go to state 12
    "<!"   shift, and go to state 13
    "..."  shift, and go to state 25

    nodes     go to state 26
    node      go to state 15
    elements  go to state 43


state 37

   13 node: '<' elements '>' .

    $default  reduce using rule 13 (node)


state 38

   14 node: "<!" elements "!>" .

    $default  reduce using rule 14 (node)


state 39

    8 nodes: node '&' nodes .

    $default  reduce using rule 8 (nodes)


state 40

    6 types: ID '&' types .

    $default  reduce using rule 6 (types)


state 41

   20 path: ID '.' path .

    $default  reduce using rule 20 (path)


state 42

   17 featvals: featval ',' featvals .

    $default  reduce using rule 17 (featvals)


state 43

   22 elements: nodes ',' elements .

    $default  reduce using rule 22 (elements)
